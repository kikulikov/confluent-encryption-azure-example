connector.class=io.confluent.connect.jdbc.JdbcSinkConnector
tasks.max=1
topics=ducks
connection.url=jdbc:postgresql://rds.amazonaws.com:5432/ducksdb
connection.user=postgres
connection.password=XXX
auto.create=true
name=jdbc-sink-1

key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=io.confluent.encryption.connect.SecuredAvroConverter

value.converter.schema.registry.url=http://localhost:8081

# Name of the data encryption key to use (store in headers)
value.converter.encryption.key=dataencryptionkey

# Name of the key encryption key to use (store in Azure Key Vault)
value.converter.wrapping.key=wrappingkey

# E2E Provider chain configuration
# Here the chain is: cached -> generator -> azure
value.converter.encryption.provider.name=cachedkeyprovider

value.converter.cachedkeyprovider.provider.class=io.confluent.kafka.secured.common.encryption.cipher.impl.CachedCipherProvider
value.converter.cachedkeyprovider.provider.expiry=3600
value.converter.cachedkeyprovider.provider.name=generator

value.converter.generator.provider.class=io.confluent.kafka.secured.common.encryption.cipher.impl.GeneratorCipherProvider
value.converter.generator.provider.name=azure

value.converter.azure.provider.class=io.confluent.encryption.common.crypto.cipher.impl.AzureCipherProvider
value.converter.azure.provider.vault.name=ubsconfluente2etest
value.converter.azure.provider.vault.client.id=97240e80-50f7-4487-82a5-679c76a1f7a6
value.converter.azure.provider.vault.client.secret=XXX
value.converter.azure.provider.vault.tenant.id=0893715b-959b-4906-a185-2789e1ead045
